-- Creazione della tabella articoli
CREATE TABLE articoli (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  titolo TEXT NOT NULL,
  contenuto TEXT NOT NULL,
  autore TEXT NOT NULL,
  categoria TEXT NOT NULL,
  data_pubblicazione DATE NOT NULL,
  immagine_url TEXT,
  pubblicato BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Commento sulla tabella
COMMENT ON TABLE articoli IS 'Tabella per la gestione degli articoli del gestionale';

-- Creazione di un trigger per aggiornare automaticamente il campo updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_articoli_updated_at
BEFORE UPDATE ON articoli
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Attivazione delle funzionalit√† real-time per questa tabella
ALTER TABLE articoli REPLICA IDENTITY FULL;

-- Creazione degli indici per migliorare le prestazioni
CREATE INDEX idx_articoli_categoria ON articoli(categoria);
CREATE INDEX idx_articoli_pubblicato ON articoli(pubblicato);
CREATE INDEX idx_articoli_data_pubblicazione ON articoli(data_pubblicazione);
CREATE INDEX idx_articoli_created_at ON articoli(created_at);

-- Impostazione delle policy RLS (Row Level Security) per l'accesso alla tabella
-- Disabilita RLS per permettere tutte le operazioni tramite la chiave di servizio
-- Permette l'accesso in lettura a tutti gli utenti autenticati
ALTER TABLE articoli ENABLE ROW LEVEL SECURITY;

-- Crea una policy che permette a tutti gli utenti autenticati di leggere gli articoli pubblicati
CREATE POLICY "Gli utenti autenticati possono leggere articoli pubblicati"
ON articoli FOR SELECT
USING (auth.role() = 'authenticated' AND pubblicato = TRUE);

-- Crea una policy che permette agli amministratori di leggere tutti gli articoli
CREATE POLICY "Gli amministratori possono leggere tutti gli articoli"
ON articoli FOR SELECT
USING (auth.role() = 'authenticated');

-- Crea una policy che permette agli amministratori di inserire articoli
CREATE POLICY "Gli amministratori possono inserire articoli"
ON articoli FOR INSERT
WITH CHECK (auth.role() = 'authenticated');

-- Crea una policy che permette agli amministratori di aggiornare articoli
CREATE POLICY "Gli amministratori possono aggiornare articoli"
ON articoli FOR UPDATE
USING (auth.role() = 'authenticated');

-- Crea una policy che permette agli amministratori di eliminare articoli
CREATE POLICY "Gli amministratori possono eliminare articoli"
ON articoli FOR DELETE
USING (auth.role() = 'authenticated'); 